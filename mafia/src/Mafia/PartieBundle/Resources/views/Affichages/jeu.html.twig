{% extends "FOSUserBundle::jeu.html.twig" %}

{% block title %}Mafia - Jouer{% endblock %}

{% block fos_user_content %}
    <script>
        var lock = false;
        var mydiv = $('#chat_ig');
        mydiv.scrollTop(mydiv.prop('scrollHeight'));

        var phase = {{ partie.phaseEnCours }};
        var tempsRestant = {{ tempsRestant }};

        setInterval( function(){
            timer();
        }, 1000);

        var enumRole = {{ monRole.roleEnum }};
        var enVieId = [];
        var enViePseudo = [];
        var joueursVivant = [];
        var joueursRoles = []
        var votes = [];
        var idAccuse = {{ idAccuse }};
        var monId = {{ monId }};
        var capaciteRestante = -1;
        var cibleId = -1;
        {% for key, j in joueurs %}
            enVieId[{{ key }}] = {{ j.id }};
            enViePseudo[{{ key }}] = "{{ j.nom }}";
            joueursVivant[{{ key }}] = "{{ j.vivant }}";
            joueursRoles[{{ key }}] = "{{ j.role }}";
        {% endfor %}

        function charger(){
            setInterval( function(){
                demanderInfo();
            }, 4000);
        }

        function votePourTellePersonne(id)
        {
            var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
            if (premierID == undefined) {
                premierID = 0;
            }
            $.post('{{ path('voter_pour')}}',{id: id, premierid: premierID}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                    var mydiv = $('#chat_ig');
                    mydiv.scrollTop(mydiv.prop('scrollHeight'));
                }
                else if(data['statut'] == "BADVOTE"){

                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Ceci n'est pas un vote valide</b></div>");
                    var mydiv = $('#chat_ig');
                    mydiv.scrollTop(mydiv.prop('scrollHeight'));
                }
                else
                {
                    if(data['action'] == "Annuler"){
                        if(data['ancien'] != ""){
                            $('#votePour'+data['ancien']).html("Voter");
                        }
                    }
                    $('#votePour'+id).html(data['action']);

                    if(!lock) {
                        afficherMessage(data['messages']);
                    }
                }
            });
        }

        function voteTribunal(oui)
        {
            $.post('{{ path('voter_tribunal')}}',{oui: oui}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                    var mydiv = $('#chat_ig');
                    mydiv.scrollTop(mydiv.prop('scrollHeight'));
                }
                else if(data['statut'] == "BADVOTE"){

                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Ceci n'est pas un vote valide</b></div>");
                    var mydiv = $('#chat_ig');
                    mydiv.scrollTop(mydiv.prop('scrollHeight'));
                }
                else
                {
                    if(data['action'] == "Annuler"){
                        $('#voteOui'+idAccuse).html("Oui");
                        $('#voteNon'+monId).html("Non");
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Vous avez annulé votre vote</b></div>");
                    }
                    else if(data['action'] == "Oui"){
                        $('#voteOui'+idAccuse).html("Annuler");
                        $('#voteNon'+monId).html("Non");
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Vous avez voté Oui</b></div>");
                    }
                    else{
                        $('#voteOui'+idAccuse).html("Oui");
                        $('#voteNon'+monId).html("Annuler");
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Vous avez voté Non</b></div>");
                    }
                    demanderInfo();
                }
            });
        }

        function chargerVivants()
        {
            var listeEnVie = $("#joueursEnVie");
            var li;
            if(document.getElementsByClassName("colonne_nom_joueur") != undefined) {
                if (document.getElementsByClassName("colonne_nom_joueur").length != enVieId.length) {
                    listeEnVie.empty();
                    for (var i in enViePseudo) {
                        li = document.createElement("li");
                        li.appendChild(document.createTextNode(enViePseudo[i]));
                        li.className = "joueurEnVie";
                        listeEnVie.append(li);
                    }
                }
            }
        }

        function cacherBoutonsVotes()
        {
            {% for j in joueurs %}
                $('#votePour'+{{ j.id }}).hide();
                $('#nbVotes'+{{ j.id }}).hide();
                $('#voteNon'+{{ j.id }}).hide();
                $('#voteOui'+{{ j.id }}).hide();
                $('#actNuit1'+{{ j.id }}).hide();
            {% endfor %}
        }

        function majMorts(){
            $('#liste_cimetiere').html("");
            for (var j in enVieId) {
                if (!joueursVivant[j]) {
                    $('#nom' + enVieId[j]).addClass('mort');
                    $('#liste_cimetiere').append(enViePseudo[j] + "(" + joueursRoles[j] + ")<br/>");
                }
            }
        }

        function afficherBoutonsVotes(){
            for(var j in enVieId){
                if(enVieId[j] != monId && joueursVivant[j]){
                    $('#votePour'+enVieId[j]).show();
                }
                if(joueursVivant[j]){
                    $('#nbVotes'+enVieId[j]).show();
                }
            }
            for(var i in votes){
                $('#nbVotes'+ i).show();
                $('#nbVotes'+ i).html(votes[i]);
            }
        }

        function afficherBoutonsActions() {
            if (enumRole == {{ constant('Mafia\\RolesBundle\\Entity\\RolesEnum::PARRAIN') }}
                    || enumRole == {{ constant('Mafia\\RolesBundle\\Entity\\RolesEnum::TUEUR_EN_SERIE') }}
                    || enumRole == {{ constant('Mafia\\RolesBundle\\Entity\\RolesEnum::MAFIOSO') }}) {

                for (var j in enVieId) {
                    if (enVieId[j] != monId && joueursVivant[j]) {
                        if(cibleId == enVieId[j]){
                            $('#actNuit1' + enVieId[j]).html("Annuler");
                        }
                        $('#actNuit1' + enVieId[j]).show();
                    }
                }
            }
            else if (enumRole == {{ constant('Mafia\\RolesBundle\\Entity\\RolesEnum::CITOYEN') }}
                    || enumRole == {{ constant('Mafia\\RolesBundle\\Entity\\RolesEnum::SURVIVANT') }}) {
                if(cibleId != -1) {
                    for (var j in enVieId) {
                        if (enVieId[j] == monId) {
                            $('#actNuit1' + enVieId[j]).show();
                            $('#actNuit1' + enVieId[j]).html("Annuler");
                        }
                    }
                }else if(capaciteRestante > 0){
                    for (var j in enVieId) {
                        if (enVieId[j] == monId) {
                            $('#actNuit1' + enVieId[j]).show();
                            $('#actNuit1' + enVieId[j]).html("Action");
                        }
                    }
                }else{
                    for (var j in enVieId) {
                        if (enVieId[j] == monId) {
                            $('#actNuit1' + enVieId[j]).hide();
                        }
                    }
                }
            }
            else{
                for (var j in enVieId) {
                    if (enVieId[j] != monId && joueursVivant[j]) {
                        $('#actNuit1' + enVieId[j]).show();
                    }
                }
            }
        }

        function actNuit1(id){
            $.post('{{ path('action_nuit_1')}}', {id: id}, function (data) {
                if(data['ACTION'] == "OK") {
                    for (var j in enVieId) {
                        if (enVieId[j] != id) {
                            $('#actNuit1' + enVieId[j]).html("Action");
                        }
                        else{
                            $('#actNuit1' + enVieId[j]).html("Annuler");
                        }
                    }
                }
                else if(data['ACTION'] == "ANNULER"){
                    for (var j in enVieId) {
                        $('#actNuit1' + enVieId[j]).html("Action");
                    }
                }
            });
        }

        function demanderInfo(){

            var exPhase = phase;
            if(!lock) {
                lock = true;
                if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::AUBE') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_aube')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            afficherMessage(data['messages']);
                            joueursRoles = data['joueursRoles'];
                            joueursVivant = data['joueursVivants'];


                            cacherBoutonsVotes();
                            phase = data["phase"];

                            majMorts()

                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }

                    $.post('{{ path('demande_info_jour')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            enVieId = data['enVieId'];
                            enViePseudo = data['enViePseudo'];
                            joueursVivant = data['joueursVivants'];
                            votes = data['votes'];
                            afficherMessage(data['messages']);
                            phase = data["phase"];

                            afficherBoutonsVotes();

                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::DISCUSSION') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_discussion')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            joueursVivant = data['joueursVivants'];
                            afficherMessage(data['messages']);

                            cacherBoutonsVotes();
                            phase = data["phase"];
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::FIN_DE_PARTIE') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_fin')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            joueursVivant = data['joueursVivants'];
                            afficherMessage(data['messages']);

                            cacherBoutonsVotes();
                            phase = data["phase"];
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_nuit')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            afficherMessage(data['messages']);
                            joueursRoles = data['joueursRoles'];
                            joueursVivant = data['joueursVivants'];
                            enViePseudo = data['enViePseudo'];
                            enVieId = data['enVieId'];
                            capaciteRestante = data['capaciteRestante'];
                            cibleId = data['cibleId'];
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            afficherBoutonsActions();

                            majMorts();

                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_DEFENSE') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_tribunal_defense')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            afficherMessage(data['messages']);
                            idAccuse = data['idAccuse'];
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_VOTE') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_tribunal_vote')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            afficherMessage(data['messages']);

                            if(idAccuse != monId) {
                                $('#voteNon' + monId).show();
                                $('#voteOui' + idAccuse).show();
                            }

                            phase = data["phase"];
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::RESULTAT_VOTE') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_vote_resultat')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            afficherMessage(data['messages']);

                            cacherBoutonsVotes();
                            phase = data["phase"];
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::EXECUTION') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }
                    $.post('{{ path('demande_info_execution')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            afficherMessage(data['messages']);

                            cacherBoutonsVotes();
                            phase = data["phase"];
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }

            }

        }

        function afficherMessage(messages){
            for (var i in messages) {
                var d = messages[i]['date']['date'].split(" ");

                if(messages[i]['systeme']){
                    $('#chat_ig').append("<div class='msgSysteme' id='" + messages[i]['id'] + "'> [" + d[1] + "] <b>" + messages[i]['pseudo'] + "</b>: " + messages[i]['message'] + "</div>");
                }
                else{
                    $('#chat_ig').append("<div id='" + messages[i]['id'] + "'> [" + d[1] + "] <b>" + messages[i]['pseudo'] + "</b>: " + messages[i]['message'] + "</div>");
                }

            }

            var mydiv = $('#chat_ig');
            mydiv.scrollTop(mydiv.prop('scrollHeight'));
        }

        function recupDuree(exPhase)
        {
            if(exPhase != phase)
            {
                if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::AUBE') }}) {
                    $('#phaseEnCours').text("Aube");
                    cacherBoutonsVotes();
                    majMorts();
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') }}) {
                    $('#phaseEnCours').text("Jour");

                    for(var j in enVieId){
                        if(!joueursVivant[j]){
                            $('#votePour'+enVieId[j]).show();
                            $('#nbVotes'+enVieId[j]).show();
                        }
                    }

                    afficherBoutonsVotes();
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::DISCUSSION') }}) {
                    $('#phaseEnCours').text("Discussion");

                    cacherBoutonsVotes();

                    majMorts();
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') }}) {

                    $('#phaseEnCours').text("Nuit");

                    cacherBoutonsVotes();
                    afficherBoutonsActions();

                    majMorts();
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_DEFENSE') }}) {
                    $('#phaseEnCours').text("Tribunal: Défense");
                    cacherBoutonsVotes();
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_VOTE') }}) {
                    $('#phaseEnCours').text("Tribunal: Vote");

                    if(idAccuse != monId) {
                        $('#voteNon' + monId).show();
                        $('#voteOui' + idAccuse).show();
                    }
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::RESULTAT_VOTE') }}) {
                    $('#phaseEnCours').text("Résultat des votes");
                    for(var i in enVieId){
                        $('#voteNon' + enVieId[i]).html("Non");
                        $('#voteOui' + enVieId[i]).html("Oui");
                    }


                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::EXECUTION') }}) {
                    $('#phaseEnCours').text("Execution");
                    cacherBoutonsVotes();
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::FIN_DE_PARTIE') }}) {
                    $('#phaseEnCours').text("Fin de la partie");
                }
                $.post('{{ path('demande_duree')}}', {
                }, function (data) {
                    if(data['statut'] == "FAIL"){
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                    }
                    else
                    {
                        tempsRestant = data['dureePhase'];

                    }
                });
            }
        }

        function timer()
        {
            if(isNaN(tempsRestant))
            {
                $.post('{{ path('demande_duree')}}', {
                }, function (data) {
                    if(data['statut'] == "FAIL"){
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                    }
                    else
                    {
                        tempsRestant = data['dureePhase'];

                    }
                });
            }
            if(tempsRestant > 0) {
                tempsRestant--;
            }
            $('#timerDiv').text(tempsRestant);
        }

        function lastWord()
        {
            var lastWord = prompt("Entrez vos derniers mots","Je veux tout léguer aux créateurs de ce site");
            $.post('{{ path('last_word')}}',{lastWord: lastWord}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                }
                else
                {

                }
            });
        }

        function deathNote()
        {
            var deathNote = prompt("Entrez votre death note","I will be back");
            $.post('{{ path('death_note')}}',{deathNote: deathNote}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                }
                else
                {

                }
            });
        }

        function envoyer(){
            var message = $("#form_message").val();
            var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
            if (premierID == undefined) {
                premierID = 0;
            }
            var DATA = 'message=' + message + '&premierid=' + premierID;
            $("#form_message").val("");
            $.ajax({
                type: "POST",
                url: "{{ path('message_ig')}}",
                data: DATA,
                cache: false,
                success: function (data) {
                    if(data.error){
                        if(phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') }}){
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Vous ne pouvez pas parler la nuit</b></div>");
                        }else if(phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_DEFENSE') }}){
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Vous ne pouvez pas parler pendant la défense de l'accusé</b></div>");
                        } else{
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Le message n'a pas été envoyé</b></div>");
                        }
                    }
                    demanderInfo();
                }
            });

            return false;
        }



        charger();
        //chargerVivants();

    </script>

    <div class="table">
        <div id="colonne_gauche">
            <div id="cimetiere">
               <b>Cimetiere</b>
                <div id="liste_cimetiere">
                    {% for key, j in joueurs %}
                        {% if not(j.vivant) %}
                            {{ j.nom }} ({{ j.role }})<br/>
                        {% endif %}
                    {% endfor %}
                </div>
            </div>
            <button onclick="deathNote();" type="button" title="Death Note: un petit message attaché avec le corps de vos victimes">DN</button><button onclick="lastWord();" type="button" title="Derniere Volontés: un message qui sera révélé à tout le monde quand vous mourrez">Derniers Mots</button>
            <div id="composition">
                <b>Composition</b>
                <div id="liste_composition">
                    {% for r in roles %}
                        {{ r }}<br/>
                    {% endfor %}
                </div>
            </div>
        </div>
        <div id="colonne_milieu">
            <div id="chat_ig">
                <b>Chat</b>
                <div>

                    {% for msg in messages %}
                        {% if msg.systeme %}
                            <div id="{{ msg.id }}" class="msgSysteme">[{{ msg.date|date("H:i:s") }}] <b>{{ msg.pseudo }}</b>: {{ msg.message }}</div>
                        {% else %}
                            <div id="{{ msg.id }}">[{{ msg.date|date("H:i:s") }}] <b>{{ msg.pseudo }}</b>: {{ msg.message }}</div>
                        {% endif %}
                    {% endfor %}


                </div>
            </div>
            <div id="form_msg">
                <form id="form_chat"  method="post" onsubmit = "envoyer(); return false;">
                    {{ form_widget(form) }}

                    <button type="button" id="envoie_chat" onclick="envoyer(); return false;" title="Envoyer">Envoyer</button>
                </form>
            </div>
        </div>
        <div id="colonne_droite">
            <div id="role">
                <b>{{ monRole.nom }}</b>
                {% if monRole.faction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::VILLE') %}
                    <span class="ville">(Ville)</span>
                {% elseif monRole.faction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::MAFIA') %}
                <span class="mafia">(Mafia)</span>
                {% elseif monRole.faction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::TRIADE') %}
                    <span class="triade">(Triade)</span>
                {% elseif monRole.faction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::NEUTRE') %}
                        <span class="neutre">(Neutre)</span>
                {% endif %}
                <br/>
                {{ monRole.descriptionPrincipale }}<br/><br/>
                {% if equipe|length > 0 %}
                    <b>Equipe:</b><br/>
                    {% for e in equipe %}
                        {% for key, j in joueurs %}
                            {% if e.id == j.id %}
                                {{ j.nom }} <b>({{ e.role }})</b>
                            {% endif %}
                        {% endfor %}
                    {% endfor %}
                {% endif %}
                <br/><br/><b>Capacité de jour: </b> {{ monRole.capacite }}<br/><br/>

                <span class="descriptionSec">{{ monRole.description }}</span><br/>
            </div>
            <div id="timer">
                <span id="timerDiv"></span> - Phase:
                <span id="phaseEnCours">
                    {% if partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::DISCUSSION') %}
                        Discussion
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') %}
                        Jour
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::AUBE') %}
                        Aube
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') %}
                        Nuit
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::EXECUTION') %}
                        Execution
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_DEFENSE') %}
                        Tribunal: Défense
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_VOTE') %}
                        Tribunal: Vote
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::RESULTAT_VOTE') %}
                        Résultat des votes
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::FIN_DE_PARTIE') %}
                        Fin de la partie
                    {% endif %}
                </span>
            </div>
            <div id="votes">
                <table class="panneauJoueurs">
                    {% set cpt = 1 %}
                    {% for key, j in joueurs %}
                        {% if j.vivant %}
                        <tr><td>{{ cpt }}</td><td><span class="nbVotes" id="{{ "nbVotes" ~ j.id }}" style="display:none">{{ j.nbVotes }}</span></td><td class="colonne_nom_joueur"><span style="font-weight: bold" id="{{ "nom" ~ j.id }}">{{ j.nom }}</span> </td>
                            <td class="colonne_bouton_vote">
                                <button id="{{ "votePour" ~ j.id }}" onclick="votePourTellePersonne({{ j.id }});" style="display:none" class="colonne_bouton_vote" {% if partie.phaseEnCours != constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') %}hidden="hidden"{% endif %}>{% if votePour == j.id %}Annuler{% else %}Voter{% endif %}</button>
                                <button id="{{ "voteOui" ~ j.id }}" onclick="voteTribunal(true);" style="display:none" class="colonne_bouton_vote" >Oui</button>
                                <button id="{{ "voteNon" ~ j.id }}" onclick="voteTribunal(false);" style="display:none" class="colonne_bouton_vote" >Non</button>
                                <button id="{{ "actNuit1" ~ j.id }}" onclick="actNuit1({{ j.id }});" style="display:none" class="colonne_bouton_vote" >Action</button>
                            </td></tr>
                        {% else %}
                        <tr><td>{{ cpt }}</td><td><span class="nbVotes" id="{{ "nbVotes" ~ j.id }}"></span></td><td class="colonne_nom_joueur"><span class="mort" id="{{ "nom" ~ j.id }}">{{ j.nom }}</span> </td><td class="colonne_bouton_vote"><button id="{{ "votePour" ~ j.id }}" onclick="votePourTellePersonne({{ j.id }});" style="display:none" class="colonne_bouton_vote" {% if partie.phaseEnCours != constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') %}hidden="hidden"{% endif %}>Voter</button></td></tr>
                        {% endif %}
                        {% set cpt = cpt+1 %}
                    {% endfor %}


                </table>
            </div>
        </div>

    </div>
    <a href="{{path('suicide')}}"><button type="button" id="suicide" title="Suicide">Suicide</button></a>
{% endblock %}