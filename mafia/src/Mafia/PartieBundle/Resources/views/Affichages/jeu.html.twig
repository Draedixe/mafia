{% extends "FOSUserBundle::jeu.html.twig" %}

{% block title %}Mafia - Jouer{% endblock %}

{% block fos_user_content %}
    <script>
        var lock = false;
        var mydiv = $('#chat_ig');
        mydiv.scrollTop(mydiv.prop('scrollHeight'));

        var phase = {{ partie.phaseEnCours }};
        var tempsRestant = {{ tempsRestant }};

        setInterval( function(){
            timer();
        }, 1000);

        var enVieId = [];
        var enViePseudo = [];
        {% for key, vivant in enVieId %}
            enVieId[{{ key }}] = {{ vivant }};
            enViePseudo[{{ key }}] = "{{ enViePseudo[key] }}";

        {% endfor %}

        function charger(){
            setInterval( function(){
                demanderInfo();
            }, 4000);
        }

        function votePourTellePersonne(id)
        {
            $.post('{{ path('voter_pour')}}',{id: id}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                }
                else if(data['statut'] == "BADVOTE"){

                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Ceci n'est pas un vote valide</b></div>");
                }
                else
                {
                    if(data['action'] == "Annuler"){
                        if(data['ancien'] != ""){
                            $('#votePour'+data['ancien']).html("Voter");
                        }
                    }
                    $('#votePour'+id).html(data['action']);
                }
            });
        }

        function chargerVivants()
        {
            var listeEnVie = $("#joueursEnVie");
            var li;
            if(document.getElementsByClassName("colonne_nom_joueur") != undefined) {
                if (document.getElementsByClassName("colonne_nom_joueur").length != enVieId.length) {
                    listeEnVie.empty();
                    for (var i in enViePseudo) {
                        li = document.createElement("li");
                        li.appendChild(document.createTextNode(enViePseudo[i]));
                        li.className = "joueurEnVie";
                        listeEnVie.append(li);
                    }
                }
            }
        }

        function cacherBoutonsVotes()
        {
            $(".colonne_bouton_vote").each(function(){
                $(this).hide();
            });
        }

        function demanderInfo(){

            var exPhase = phase;
            if(!lock) {
                lock = true;
                if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::AUBE') }}) {
                    $.post('{{ path('demande_info_aube')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Aube");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') }}) {
                    var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
                    if (premierID == undefined) {
                        premierID = 0;
                    }

                    $.post('{{ path('demande_info_jour')}}', {premierid: premierID}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            enVieId = data['enVieId'];
                            enViePseudo = data['enViePseudo'];
                            //chargerVivants();

                            for (var i in data['messages']) {
                                var d = data['messages'][i]['date']['date'].split(" ");
                                $('#chat_ig').append("<div id='" + data['messages'][i]['id'] + "'> [" + d[1] + "] <b>" + data['messages'][i]['pseudo'] + "</b>: " + data['messages'][i]['message'] + "</div>");
                            }

                            var mydiv = $('#chat_ig');
                            mydiv.scrollTop(mydiv.prop('scrollHeight'));


                            $(".colonne_bouton_vote").each(function () {
                                $(this).show();
                            });

                            phase = data["phase"];
                            $('#phaseEnCours').text("Jour");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::DISCUSSION') }}) {
                    $.post('{{ path('demande_info_discussion')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Discussion");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') }}) {
                    $.post('{{ path('demande_info_nuit')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            //alert("fail");
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Nuit");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_DEFENSE') }}) {
                    $.post('{{ path('demande_info_tribunal_defense')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Tribunal: Défense");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_VOTE') }}) {
                    $.post('{{ path('demande_info_tribunal_vote')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Tribunal: Vote");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::RESULTAT_VOTE') }}) {
                    $.post('{{ path('demande_info_vote_resultat')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Résultat des votes");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }
                else if (phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::EXECUTION') }}) {
                    $.post('{{ path('demande_info_execution')}}', {}, function (data) {
                        if (data['statut'] == "FAIL") {
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Erreur</b></div>");
                        }
                        else {
                            cacherBoutonsVotes();
                            phase = data["phase"];
                            $('#phaseEnCours').text("Execution");
                            recupDuree(exPhase);
                        }
                        lock = false;
                    });
                }

            }

        }

        function recupDuree(exPhase)
        {
            if(exPhase != phase)
            {
                $.post('{{ path('demande_duree')}}', {
                }, function (data) {
                    if(data['statut'] == "FAIL"){
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                    }
                    else
                    {
                        tempsRestant = data['dureePhase'];

                    }
                });
            }
        }

        function timer()
        {
            if(isNaN(tempsRestant))
            {
                $.post('{{ path('demande_duree')}}', {
                }, function (data) {
                    if(data['statut'] == "FAIL"){
                        $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                    }
                    else
                    {
                        tempsRestant = data['dureePhase'];

                    }
                });
            }
            tempsRestant--;
            $('#timerDiv').text(tempsRestant);
        }

        function lastWord()
        {
            var lastWord = prompt("Entrez vos derniers mots","Je veux tout léguer aux créateurs de ce site");
            $.post('{{ path('last_word')}}',{lastWord: lastWord}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                }
                else
                {

                }
            });
        }

        function deathNote()
        {
            var deathNote = prompt("Entrez votre death note","I will be back");
            $.post('{{ path('death_note')}}',{deathNote: deathNote}, function (data) {
                if(data['statut'] == "FAIL"){
                    $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>L'utilisateur n'existe pas</b></div>");
                }
                else
                {

                }
            });
        }

        function envoyer(){
            var message = $("#form_message").val();
            var premierID = $('#chat_ig div:last').attr('id'); // on récupère l'id le plus récent
            if (premierID == undefined) {
                premierID = 0;
            }
            var DATA = 'message=' + message + '&premierid=' + premierID;
            $("#form_message").val("");
            $.ajax({
                type: "POST",
                url: "{{ path('message_ig')}}",
                data: DATA,
                cache: false,
                success: function (data) {
                    if(data.error){
                        if(phase == {{ constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') }}){
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>Vous ne pouvez pas parler la nuit</b></div>");
                        }else{
                            $('#chat_ig').append("<div id='"+ $('#chat_ig div:last').attr('id') +"' ><b>le message n'a pas été envoyé</b></div>");
                        }
                    }
                    demanderInfo();
                }
            });

            return false;
        }



        charger();
        //chargerVivants();

    </script>
    <div>
        En Vie:
        <ul id="joueursEnVie">
            {% for p in enViePseudo %}
                <li>{{ p }}</li>
            {% endfor %}
        </ul>
    </div>

    <div class="table">
        <div id="colonne_gauche">
            <div id="cimetiere">
               <b>Cimetiere</b>
                <div id="liste_cimetiere">
                    Joueur 1 Mort<br/>
                    Joueur 2 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort<br/>
                    Joueur 1 Mort
                </div>
            </div>
            <button onclick="deathNote();" type="button" title="Death Note: un petit message attaché avec le corps de vos victimes">DN</button><button onclick="lastWord();" type="button" title="Derniere Volontés: un message qui sera révélé à tout le monde quand vous mourrez">Derniers Mots</button>
            <div id="composition">
                <b>Composition</b>
                <div id="liste_composition">
                    {% for r in roles %}
                        {{ r }}<br/>
                    {% endfor %}
                </div>
            </div>
        </div>
        <div id="colonne_milieu">
            <div id="chat_ig">
                <b>Chat</b>
                <div>
                    <b>J9:</b> Message 1<br/>
                    <b>J4:</b> Message 2<br/>
                    <b>J2:</b> Message 3<br/>
                    <b>C'est la nuit</b><br/>
                    <b>C'est le jour</b>

                    {% for msg in messages %}
                        <div id="{{ msg.id }}">[{{ msg.date|date("H:i:s") }}] <b>{{ msg.pseudo }}</b>: {{ msg.message }}</div>
                    {% endfor %}


                </div>
            </div>
            <div id="form_msg">
                <form id="form_chat"  method="post" onsubmit = "envoyer(); return false;">
                    {{ form_widget(form) }}

                    <button type="button" id="envoie_chat" title="Envoyer">Envoyer</button>
                </form>
            </div>
        </div>
        <div id="colonne_droite">
            <div id="role">
                <b>Parrain:</b><br/>
                Vous dirigez la mafia. Ca envoie du paté.<br/>
                Vous pouvez tuer des gens, c'est trop génial.<br/><br/>
                <b>Equipe:</b><br/>
                Raph55 <b>(Parrain)</b><br/>
                Drae <b>(Mafioso)</b><br/>
                Pascal <b>(Mafioso)</b> - <i>Mort</i>

                <br/><br/><b>Capacité de jour: </b> Aucune
            </div>
            <div id="timer">
                <span id="timerDiv"></span> - Phase:
                <span id="phaseEnCours">
                    {% if partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::DISCUSSION') %}
                        Discussion
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') %}
                        Jour
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::AUBE') %}
                        Aube
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::NUIT') %}
                        Nuit
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::EXECUTION') %}
                        Execution
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_DEFENSE') %}
                        Tribunal: Défense
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::TRIBUNAL_VOTE') %}
                        Tribunal: Vote
                    {% elseif partie.phaseEnCours == constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::RESULTAT_VOTE') %}
                        Résultat des votes
                    {% endif %}
                </span>
            </div>
            <div id="votes">
                <table>
                    {% for key, p in enViePseudo %}
                        <tr><td class="colonne_nom_joueur"><b>{{ p }}</b> </td><td class="colonne_bouton_vote"><button id="{{ "votePour" ~ enVieId[key] }}" onclick="votePourTellePersonne({{ enVieId[key] }});" class="colonne_bouton_vote" {% if partie.phaseEnCours != constant('Mafia\\PartieBundle\\Entity\\PhaseJeuEnum::JOUR') %}hidden="hidden"{% endif %}>Voter</button></td></tr>
                    {% endfor %}


                </table>
            </div>
        </div>

    </div>
    <a href="{{path('suicide')}}"><button type="button" id="suicide" title="Suicide">Suicide</button></a>
{% endblock %}