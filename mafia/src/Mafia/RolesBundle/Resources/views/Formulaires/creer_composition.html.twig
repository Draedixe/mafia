{% extends "FOSUserBundle::layout.html.twig" %}

{% block title %}Mafia - Composition{% endblock %}

{% block fos_user_content %}

    <script>
        var compositionId = {{ composition.id }};
        var composition = [];
        var idSelectionnee;
        var nomSelectionne;
        var uniqueSelectionne;
        var roleSelectionne;
        var ancienSelect;
        var nombreElem = 0;
        var options = [];
        var importances = [];
        var actionEnCours = false;

        function changerNom()
        {
            $.post('{{ path('changer_nom_compo')}}',{id:{{ composition.id }},nom: $('#nomComposition').val()}, function (data) {
                if(data['statut'] == "FAIL"){
                    alert(data['erreur']);
                }
            });
        }
        function recupererOptions(role,id)
        {
            actionEnCours = true;
            $('.options').remove();
            $.ajax({
                type: "POST",
                url : "{{ path('recuperer_noms_options')}}",
                data: {role: role,compo: compositionId},
                dataType : "json",
                error: function()
                {
                    actionEnCours = false;
                },
                success : function(data)
                {
                    if(!data)
                    {
                        actionEnCours = false;
                    }
                    else{
                        var min;
                        var max;
                        var valeur;
                        var p;
                        var valeurPoss;
                        var radio, label;
                        for(var option in data)
                        {
                            min = data[option]["min"];
                            max = data[option]['max'];
                            defaut = data[option]['valeur'];
                            p = document.createElement("p");
                            p.appendChild(document.createTextNode(data[option]["nom"]));
                            p.id = "option" + option;
                            p.className = "options";
                            for(var j = min; j <= max ; j ++)
                            {
                                label = document.createElement("label");
                                label.setAttribute('for','option' + option + 'val' + j);
                                label.appendChild(document.createTextNode(j));
                                radio = document.createElement("input");
                                radio.setAttribute('onchange','changementValeurOption(' + id + ',' + option + ',' + j + ')');
                                radio.setAttribute('id','option' + option + 'val' + j);
                                radio.setAttribute('type', 'radio');
                                radio.setAttribute('name', 'option' + option);
                                radio.setAttribute('value', j);
                                if(valeur > -1)
                                {
                                    if(j == valeur)
                                    {
                                        radio.setAttribute('checked', 'true');
                                    }
                                }
                                else if(j == defaut)
                                {
                                    radio.setAttribute('checked', 'true');
                                }
                                p.appendChild(radio);
                                p.appendChild(label);

                            }
                            $('#optionsRole').append(p);
                            actionEnCours = false;
                        }
                    }
                }
            });
        }
        function boutonAjout(id,nom,unique,role)
        {
            if(!actionEnCours)
            {
                if(role >= 0){
                    idSelectionnee = id;
                    $(ancienSelect).css('background-color','');
                    roleSelectionne = role;
                    ancienSelect = "#role" + id;
                    valeurImportance();
                    recupererOptions(role,id);

                }
                else
                {
                    $(ancienSelect).css('background-color','');
                    ancienSelect = "#categorie" + id;
                    idSelectionnee = id * -1;
                }
                nomSelectionne = nom;
                uniqueSelectionne = unique;
                $(ancienSelect).css('background-color','#00CCFF');

            }
            else
            {
                alert("Un chargement est encore en cours");
            }
        }


        function valeurImportance()
        {
            $.post('{{ path('recuperer_valeur_importance')}}',{idCompo:{{ composition.id }},idRole:idSelectionnee}, function (data) {
                if(data['statut'] == "FAIL"){
                    alert(data['erreur']);
                    creationRange(-1)
                }else{
                    creationRange(data['valeur']);

                }
            });
        }

        function creationRange(valeur){
            var importanceTD = $("#importanceTD");
            importanceTD.empty();
            var label, range, div;
            label = document.createElement("label");
            label.setAttribute('for','importanceRange');
            label.appendChild(document.createTextNode('Importance du rôle : '));
            range = document.createElement("input");
            range.setAttribute('onchange','changementValeurImportance()');
            range.setAttribute('id','importanceRange');
            range.setAttribute('type', 'range');
            range.setAttribute('min', '0');
            range.setAttribute('max', '200');
            if(valeur > -1 && valeur <= 200){
                range.setAttribute('value',valeur );
            }
            else{
                range.setAttribute('value', '100');
            }
            div = document.createElement("div");
            div.setAttribute('id','importanceValeur');
            div.appendChild(document.createTextNode(range.value));
            importanceTD.append(label).append(range).append(div);
        }

        function changementValeurImportance(){
            $.post('{{ path('changer_valeur_importance')}}',{idCompo:{{ composition.id }},idRole:idSelectionnee,valeur:$('#importanceRange').val()}, function (data) {
                if(data['statut'] == "FAIL"){
                    alert(data['erreur']);
                }else{

                }
            });
        }

        function ajoutCompo(role){

            $.post('{{ path('ajout_role_compo')}}',{idCompo:{{ composition.id }},idRole:role}, function (data) {
                if(data['statut'] == "FAIL"){
                    alert(data['erreur']);
                }
            });
        }

        function changementValeurOption(role,option,valeur){
            $.post('{{ path('change_valeur_option')}}',{idCompo:{{ composition.id }},idRole:role,valeur:valeur,enumOption:option}, function (data) {
                if(data['statut'] == "FAIL"){
                    alert(data['erreur']);
                }else{

                }
            });
        }
    </script>

    <h3>Création d'une composition</h3>

    <p>
        <label for="nomComposition">Nom de la composition :</label><input type="text" id="nomComposition">
        <button onclick="changerNom();">Changer</button>
    </p>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-2">
                <h4 style="display: inline-block">Ville</h4>
                <ul>
                    {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::VILLE') %}
                        <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }}  </li>
                    {% endfor %}
                </ul>
            </div>
            <div class="col-md-2">
                <h4>Mafia</h4>
                <ul>
                    {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::MAFIA') %}
                        <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }} </li>
                    {% endfor %}
                </ul>
            </div>
            <div class="col-md-2">
                <h4>Triade</h4>
                <ul>
                    {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::TRIADE') %}
                        <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }}  </li>
                    {% endfor %}
                </ul>
            </div>
            <div class="col-md-2">
                <h4>Neutre</h4>
                <ul>
                    {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::NEUTRE') %}
                        <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }}  </li>
                    {% endfor %}
                </ul>
            </div>
            <div class="col-md-4">
                <h4>Catégorie</h4>
                <ul>
                    {% for categorie in categories %}
                        <li id="{{ "categorie" ~ categorie.id }}" onclick="boutonAjout({{ categorie.id }},'{{ categorie.nomCategorie }}',0,-1);">{{ categorie.nomCategorie }}  </li>
                    {% endfor %}
                </ul>
            </div>
        </div>

        <div class="row" style="padding: 10px">
            <div class="col-md-4" id="importanceTD"></div>
            <div class="col-md-4">
                <button id="boutonAjout" onclick="ajoutCompo(idSelectionnee,nomSelectionne,uniqueSelectionne, roleSelectionne);"  >\/</button>
                <button id="boutonEnleve" onclick="enleveCompo(idSelectionnee,nomSelectionne,uniqueSelectionne,roleSelectionne);"  >/\</button>
            </div>
            <div class="col-md-4" style="border: 1px #296cff solid" id="optionsRole">
            </div>
        </div>

        <div class="row" style="padding: 10px">
            <ul style=";border:solid 2px darkred" id="tableauCompo">

            </ul>
        </div>
        <div class="row">
            <div class="col-md-5"></div>
            <div class="col-md-2">
                <button onclick="validerCompo();">
                    Valider
                </button>
            </div>
            <div class="col-md-5"></div>
        </div>
    </div>

{% endblock %}