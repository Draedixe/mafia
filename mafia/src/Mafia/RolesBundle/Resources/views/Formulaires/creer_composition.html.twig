{% extends "FOSUserBundle::layout.html.twig" %}

{% block title %}Mafia - Composition{% endblock %}

{% block fos_user_content %}

    <script>
        var composition = [];
        var idSelectionnee;
        var nomSelectionne;
        var uniqueSelectionne;
        var ancienSelect;
        var nombreElem = 0;
        var options = [];
        function ajoutCompo(id, nom, unique)
        {

            var li;
            if(unique){
                if(document.getElementsByClassName("elem" + id).length <= 0) {
                    li = document.createElement("li");
                    li.appendChild(document.createTextNode(nom));
                    li.id = "elem" + nombreElem + id;
                    li.className = "elem" + id;
                    nombreElem ++ ;
                    li.onclick = function () {
                        boutonEnleve(li.id,id);
                    };
                    $('#tableauCompo').append(li);
                    composition.push(id);
                }
                else{
                    alert("Cet élément est unique dans une composition !")
                }

            }
            else{
                li = document.createElement("li");
                li.appendChild(document.createTextNode(nom));
                li.id = "elem" + nombreElem + id;
                li.className = "elem" + id;
                nombreElem ++ ;
                li.onclick = function () {
                    boutonEnleve(li.id,id);
                };
                $('#tableauCompo').append(li);
                composition.push(id);
            }
        }

        function boutonEnleve(identifiantElem, id)
        {
            $("#"+identifiantElem).remove();
            composition.splice($.inArray(id, composition),1);
        }

        function boutonAjout(id,nom,unique,role)
        {
            recupererOptions(role,id);
            idSelectionnee = id;
            nomSelectionne = nom;
            uniqueSelectionne = unique;
            $(ancienSelect).css('background-color','');
            ancienSelect = "#role" + id;
            $("#role" + id).css('background-color','#00CCFF');

        }

        function validerCompo()
        {
            $.post('{{ path('ajout_compo')}}', { composition: composition,options : options},function(data) {
                document.location.href="{{ path('vue_role', {'id':1}) }}";
            });
        }

        function recupererOptions(role,id)
        {
            $('.options').empty();
            $.ajax({
                type: "POST",
                url : "{{ path('recuperer_noms_options')}}",
                data: {role: role},
                dataType : "json",
                success : function(data)
                {
                    for(var i in data)
                    {
                        var p;
                        p = document.createElement("p");
                        p.appendChild(document.createTextNode(data[i]));
                        p.id = "option" + i;
                        p.className = "options";
                        ajouterOptionsEtValeurs(i,role,id);
                        $('#optionsRole').append(p);
                    }
                }
            });
        }

        function ajouterOptionsEtValeurs(option,role,id)
        {
            $.ajax({
                type: "POST",
                url : "{{ path('recuperer_valeurs_options')}}",
                data: {role: role, option: option},
                dataType : "json",
                success : function(data)
                {
                    var min = data['min'];
                    var max = data['max'];
                    var defaut = data['defaut'];
                    var radio;
                    var label;
                    for(var j = min; j < max+1 ; j ++)
                    {
                        label = document.createElement("label");
                        label.setAttribute('for','option' + option + 'val' + j);
                        label.appendChild(document.createTextNode(j));
                        radio = document.createElement("input");
                        radio.setAttribute('onchange','changementValeurOption(' + id + ',' + option + ',' + j + ')');
                        radio.setAttribute('id','option' + option + 'val' + j);
                        radio.setAttribute('type', 'radio');
                        radio.setAttribute('name', 'option' + option);
                        radio.setAttribute('value', j);
                        var valeurPoss = valeurOption(id,option);
                        if(valeurPoss > -1)
                        {
                            if(j == valeurPoss)
                            {
                                radio.setAttribute('checked', 'true');
                            }
                        }
                        else if(j == defaut)
                        {
                            radio.setAttribute('checked', 'true');
                        }
                        $('#option'+option).append(radio).append(label);

                    }
                }
            });
        }

        function valeurOption(role,option)
        {
            for(var i in options)
            {
                if(options[i]['role'] == role && options[i]['option'] == option)
                {
                    return options[i]['valeur'];
                }
            }
            return -1;
        }

        function changementValeurOption(role,option,valeur)
        {
            if(valeurOption(role,option) > -1)
            {
                for(var i in options)
                {
                    if(options[i]['role'] == role && options[i]['option'] == option)
                    {
                        options[i]['valeur'] = valeur;
                    }
                }
            }
            else
            {
                options.push({role:role,option:option,valeur:valeur});
            }
        }

    </script>
    <h3>Création d'une composition</h3>

    <h4>Ville</h4>
    <ul>
        {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::VILLE') %}
            <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }}  </li>
        {% endfor %}
    </ul>

    <h4>Mafia</h4>
    <ul>
        {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::MAFIA') %}
            <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }} </li>
        {% endfor %}
    </ul>

    <h4>Neutre</h4>
        <ul>
            {% for role in roles if role.enumFaction == constant('Mafia\\RolesBundle\\Entity\\FactionEnum::NEUTRE') %}
                <li id="{{ "role" ~ role.id }}" onclick="boutonAjout({{ role.id }},'{{ role.nomRole }}',{{ role.roleUnique ? 1 : 0 }},{{ role.enumRole }});">{{ role.nomRole }}  </li>
            {% endfor %}
        </ul>
    <button id="boutonAjout" onclick="ajoutCompo(idSelectionnee,nomSelectionne,uniqueSelectionne);"  >></button>

    <fieldset id="optionsRole">
        <legend>Options</legend>


    </fieldset>
    <h3>Composition</h3>
    <ul id="tableauCompo">

    </ul>

    <button onclick="validerCompo();">
        Valider
    </button>
{% endblock %}